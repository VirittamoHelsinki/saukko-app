{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.26.170.59819",
      "templateHash": "13083322699550073208"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "app_name": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]"
    }
  },
  "variables": {
    "skuName": "B1",
    "skuTier": "Basic",
    "skuSize": "B1",
    "workspaceName": "[format('{0}-ws-{1}', parameters('app_name'), uniqueString(resourceGroup().id))]",
    "appInsightName": "[format('{0}-insight-{1}', parameters('app_name'), uniqueString(resourceGroup().id))]",
    "webappName": "[format('{0}-app-{1}', parameters('app_name'), uniqueString(resourceGroup().id))]",
    "functionsAppName": "[format('{0}-fn-{1}', parameters('app_name'), uniqueString(resourceGroup().id))]",
    "appServicePlanName": "[format('{0}-asp', parameters('app_name'))]",
    "cosmosDbName": "[format('{0}-cosmos', parameters('app_name'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2023-01-01",
      "name": "[variables('appServicePlanName')]",
      "location": "[parameters('location')]",
      "kind": "linux",
      "properties": {
        "reserved": true
      },
      "sku": {
        "name": "[variables('skuName')]",
        "tier": "[variables('skuTier')]",
        "size": "[variables('skuSize')]"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2023-01-01",
      "name": "[variables('webappName')]",
      "kind": "app,linux",
      "location": "[parameters('location')]",
      "properties": {
        "reserved": true,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "siteConfig": {
          "numberOfWorkers": 1,
          "functionAppScaleLimit": 0,
          "minimumElasticInstanceCount": 0,
          "linuxFxVersion": "NODE|20-lts",
          "appSettings": [
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightName')), '2020-02-02').InstrumentationKey]"
            },
            {
              "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightName')), '2020-02-02').ConnectionString]"
            },
            {
              "name": "MONGODB_URI",
              "value": "[listConnectionStrings(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbName')), '2024-02-15-preview').connectionStrings[0].connectionString]"
            },
            {
              "name": "APP_URL",
              "value": "."
            },
            {
              "name": "JWT_SECRET",
              "value": "."
            },
            {
              "name": "EMAIL_SERVICE",
              "value": "."
            },
            {
              "name": "EMAIL_SERVICE_HOST",
              "value": "."
            },
            {
              "name": "EMAIL_SERVICE_PORT",
              "value": "."
            },
            {
              "name": "EMAIL_SERVICE_USER",
              "value": "."
            },
            {
              "name": "EMAIL_SERVICE_PASSWORD",
              "value": ""
            },
            {
              "name": "EMAIL_SERVICE_FROM",
              "value": "."
            },
            {
              "name": "NODE_ENV",
              "value": "staging|production"
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', variables('appInsightName'))]",
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbName'))]"
      ]
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('appInsightName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "Flow_Type": "Redfield",
        "Request_Source": "IbizaAIExtensionEnablementBlade",
        "SamplingPercentage": null,
        "RetentionInDays": 90,
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('workspaceName'))]",
        "IngestionMode": "LogAnalytics",
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('workspaceName'))]"
      ]
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2023-09-01",
      "name": "[variables('workspaceName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "pergb2018"
        },
        "retentionInDays": 30,
        "features": {
          "legacy": 0,
          "searchVersion": 1,
          "enableLogAccessUsingOnlyResourcePermissions": true
        },
        "workspaceCapping": {
          "dailyQuotaGb": "[json('-1.0')]"
        },
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2023-01-01",
      "name": "[variables('functionsAppName')]",
      "kind": "functionapp,linux",
      "location": "[parameters('location')]",
      "tags": {
        "hidden-link: /app-insights-resource-id": "[resourceId('Microsoft.Insights/components', variables('appInsightName'))]"
      },
      "properties": {
        "enabled": true,
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "reserved": true,
        "isXenon": false,
        "hyperV": false,
        "siteConfig": {
          "numberOfWorkers": 1,
          "linuxFxVersion": "Node|20",
          "windowsFxVersion": null,
          "appSettings": [
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightName')), '2020-02-02').InstrumentationKey]"
            },
            {
              "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
              "value": "[reference(resourceId('Microsoft.Insights/components', variables('appInsightName')), '2020-02-02').ConnectionString]"
            },
            {
              "name": "MONGODB_URI",
              "value": "[listConnectionStrings(resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbName')), '2024-02-15-preview').connectionStrings[0].connectionString]"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "node"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "0"
            }
          ]
        },
        "httpsOnly": true,
        "redundancyMode": "None",
        "publicNetworkAccess": "Enabled"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', variables('appInsightName'))]",
        "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanName'))]",
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', variables('cosmosDbName'))]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2024-02-15-preview",
      "name": "[variables('cosmosDbName')]",
      "location": "[parameters('location')]",
      "kind": "MongoDB",
      "tags": {
        "defaultExperience": "Azure Cosmos DB for MongoDB API",
        "hidden-cosmos-mmspecial": ""
      },
      "properties": {
        "publicNetworkAccess": "Enabled",
        "databaseAccountOfferType": "Standard",
        "defaultIdentity": "FirstPartyIdentity",
        "minimalTlsVersion": "Tls12",
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Session",
          "maxIntervalInSeconds": 5,
          "maxStalenessPrefix": 100
        },
        "apiProperties": {
          "serverVersion": "6.0"
        },
        "locations": [
          {
            "locationName": "[parameters('location')]",
            "failoverPriority": 0,
            "isZoneRedundant": false
          }
        ],
        "cors": [],
        "capabilities": [
          {
            "name": "EnableMongo"
          },
          {
            "name": "EnableServerless"
          }
        ],
        "ipRules": [],
        "backupPolicy": {
          "type": "Periodic",
          "periodicModeProperties": {
            "backupIntervalInMinutes": 240,
            "backupRetentionIntervalInHours": 8,
            "backupStorageRedundancy": "Geo"
          }
        },
        "networkAclBypassResourceIds": [],
        "diagnosticLogSettings": {
          "enableFullTextQuery": "None"
        }
      },
      "identity": {
        "type": "None"
      }
    }
  ]
}